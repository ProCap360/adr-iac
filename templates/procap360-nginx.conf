map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}

server {
        if ($host != {{workspace}}.{{fqdn}}) {
                return 401;
        }

        root /var/www/procap-web;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name {{workspace}}.{{fqdn}};

        listen [::]:443 ssl default_server;
        listen 443 ssl default_server;
        ssl_certificate /etc/letsencrypt/live/{{fqdn}}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{fqdn}}/privkey.pem;

        # content of /etc/letsencrypt/options-ssl-nginx.conf
        # https://ssl-config.mozilla.org/
        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # this supports refreshing nextjs page url that contains path url.
        # static page will return 404, fallback here will redirect to /refresh to access the nextjs page correctly
        error_page 404 = @fallback;
        location @fallback {
                rewrite ^(.*)$ /refresh/;
        }
        absolute_redirect off; # redirect should be relative (without protocol, without port)
}

server {
        root /var/www/procap-web;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name {{workspace}}.{{fqdn}};

        listen [::]:80;
        listen 80;

        return 301 https://$host$request_uri;
}